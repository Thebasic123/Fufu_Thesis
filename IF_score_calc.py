import blindIterativeFiltering as it

sim = [[0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, -1, -1, -1, -1, -1, 0, -1, 0, -1, -1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, -1, 0, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1], [0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1], [0, -1, 0, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1], [0, -1, 0, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1], [0, -1, 0, -1, 0, 0, -1, 0, 0, -1, -1, -1, -1, -1], [0, -1, 0, -1, 0, 0, -1, 0, -1, 0, -1, -1, -1, -1], [0, -1, 0, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1], [0, 0, 0, 0, -1, 0, -1, -1, -1, 0, -1, -1, -1, -1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, -1, -1, -1, -1, -1, 0, -1, 0, -1, -1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1], [0, -1, 0, -1, 0, 0, -1, 0, -1, -1, -1, -1, -1, -1], [0, 0, 0, 0, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1], [0, -1, 0, -1, 0, 0, -1, 0, -1, -1, -1, -1, -1, -1], [0, -1, 0, -1, 0, 0, -1, 0, -1, -1, -1, -1, -1, -1], [0, 0, 0, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1], [0, 0, 0, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1], [0, 0, 0, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1], [0, 0, 0, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1], [-1, 0, -1, 0, -1, -1, -1, -1, -1, 0, -1, 0, -1, -1], [-1, 0, -1, 0, -1, -1, -1, -1, -1, 0, -1, 0, -1, -1], [0, -1, 0, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1], [0, -1, 0, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1], [0, 0, -1, 0, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1], [0, 0, -1, 0, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1], [-1, 0, -1, 0, -1, -1, -1, -1, -1, 0, -1, 0, -1, -1], [0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, 0, -1, 0, -1, -1, -1, -1, -1, 0, -1, 0, -1, -1], [-1, 0, -1, 0, -1, -1, -1, -1, -1, 0, -1, 0, -1, -1], [0, 0, 0, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1], [0, 0, 0, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1], [0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [0, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [-1, 0, -1, 0, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1], [-1, 0, -1, 0, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1], [-1, 0, -1, 0, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1], [-1, 0, -1, 0, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1], [-1, 0, -1, 0, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1], [-1, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1], [0, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [0, -1, 0, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1], [0, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, 0, -1, 0, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1], [-1, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1], [-1, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [-1, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [0, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1], [0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, 0, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1], [-1, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [-1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1], [-1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1], [-1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
it.changeThreshold(0.1)
result = it.iterativeFiltering(sim)
print(result)